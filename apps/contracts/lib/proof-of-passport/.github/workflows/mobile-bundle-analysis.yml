name: Mobile Bundle Analysis

env:
  RUBY_VERSION: 3.2
  JAVA_VERSION: 17
  WORKSPACE: ${{ github.workspace }}
  APP_PATH: ${{ github.workspace }}/app

on:
  pull_request:
    paths:
      - "app/**"
      - "packages/mobile-sdk-alpha/**"
      - ".github/workflows/mobile-bundle-analysis.yml"
      - ".github/actions/**"
  workflow_dispatch:

jobs:
  analyze-android:
    runs-on: macos-latest-large
    steps:
      - uses: actions/checkout@v4
      - name: Read and sanitize Node.js version
        shell: bash
        run: |
          if [ ! -f .nvmrc ] || [ -z "$(cat .nvmrc)" ]; then
            echo "❌ .nvmrc is missing or empty"; exit 1;
          fi
          VERSION="$(tr -d '\r\n' < .nvmrc)"
          VERSION="${VERSION#v}"
          if ! [[ "$VERSION" =~ ^[0-9]+(\.[0-9]+){0,2}$ ]]; then
            echo "Invalid .nvmrc content: '$VERSION'"; exit 1;
          fi
          echo "NODE_VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "NODE_VERSION_SANITIZED=${VERSION//\//-}" >> "$GITHUB_ENV"
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            node_modules
            app/node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION_SANITIZED }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION_SANITIZED }}-yarn-
      - name: Cache Ruby Bundler
        uses: actions/cache@v4
        with:
          path: app/vendor/bundle
          key: ${{ runner.os }}-ruby${{ env.RUBY_VERSION }}-gems-${{ hashFiles('app/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-ruby${{ env.RUBY_VERSION }}-gems-
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('app/android/**/gradle-wrapper.properties', 'app/android/**/gradle-wrapper.jar') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Install Mobile Dependencies
        uses: ./.github/actions/mobile-setup
        with:
          app_path: ${{ env.APP_PATH }}
          node_version: ${{ env.NODE_VERSION }}
          ruby_version: ${{ env.RUBY_VERSION }}
          workspace: ${{ env.WORKSPACE }}
        env:
          SELFXYZ_INTERNAL_REPO_PAT: ${{ secrets.SELFXYZ_INTERNAL_REPO_PAT }}
      - name: Build dependencies
        shell: bash
        run: yarn workspace @selfxyz/common build
      - name: Run Android analysis
        run: yarn analyze:bundle:android
        working-directory: ./app

  analyze-ios:
    runs-on: macos-latest-large
    steps:
      - uses: actions/checkout@v4
      - name: Read and sanitize Node.js version
        shell: bash
        run: |
          if [ ! -f .nvmrc ] || [ -z "$(cat .nvmrc)" ]; then
            echo "❌ .nvmrc is missing or empty"; exit 1;
          fi
          VERSION="$(tr -d '\r\n' < .nvmrc)"
          VERSION="${VERSION#v}"
          if ! [[ "$VERSION" =~ ^[0-9]+(\.[0-9]+){0,2}$ ]]; then
            echo "Invalid .nvmrc content: '$VERSION'"; exit 1;
          fi
          echo "NODE_VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "NODE_VERSION_SANITIZED=${VERSION//\//-}" >> "$GITHUB_ENV"
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            node_modules
            app/node_modules
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ env.NODE_VERSION }}-yarn-
      - name: Cache Ruby Bundler
        uses: actions/cache@v4
        with:
          path: app/vendor/bundle
          key: ${{ runner.os }}-ruby${{ env.RUBY_VERSION }}-gems-${{ hashFiles('app/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-ruby${{ env.RUBY_VERSION }}-gems-
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: app/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('app/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install Mobile Dependencies
        uses: ./.github/actions/mobile-setup
        with:
          app_path: ${{ env.APP_PATH }}
          node_version: ${{ env.NODE_VERSION }}
          ruby_version: ${{ env.RUBY_VERSION }}
          workspace: ${{ env.WORKSPACE }}
        env:
          SELFXYZ_INTERNAL_REPO_PAT: ${{ secrets.SELFXYZ_INTERNAL_REPO_PAT }}
      - name: Build dependencies
        shell: bash
        run: yarn workspace @selfxyz/common build
      - name: Run iOS analysis
        run: yarn analyze:bundle:ios
        working-directory: ./app
